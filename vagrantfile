# -*- mode: ruby -*-
# vi: set ft=ruby :

IMAGE_NAME = "generic/ubuntu2004"
DEFAULT_CPU = 2
DEFAULT_MEMORY = 2048
IP_BASE =  "192.168.56."

MASTER_NAME = ENV['MASTER_NAME'] || "master"

WORKER_NAME_PREFIX = ENV['WORKER_NAME_PREFIX'] || "worker"
WORKER_NUM = (ENV['WORKER_NUM'] || 3).to_i


Vagrant.configure("2") do |config|  
   # ------------------------------------------------------
   # --------------- Default configurations ---------------
   # ------------------------------------------------------
   config.vm.box = IMAGE_NAME
   config.vm.hostname = MASTER_NAME
   config.env.enable # Enable vagrant-env(.env)
	config.vm.synced_folder "shared", "/root/shared" # share pods folder
   config.vm.provider "virtualbox" do |vb|
      vb.cpus = DEFAULT_CPU
      vb.memory = DEFAULT_MEMORY
   end
   
   # set up docker-kube
   config.vm.provision "shell", path: "./install-docker-kube.sh"
   
   # Set up SSH
   config.vm.provision "shell", inline: <<-SHELL
      # username: root - pass: 123
      echo "root:123" | chpasswd
      sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
      systemctl reload sshd
   SHELL
      

   # ------------------------------------------------------
   # ----------------------- Master VM --------------------
   # ------------------------------------------------------
   config.vm.define MASTER_NAME do |master|
      ipv4=IP_BASE + "10"
      
      master.vm.network "private_network", ip: "#{ipv4}"
      master.vm.hostname = MASTER_NAME
      master.vm.provider "virtualbox" do |vbox|
         vbox.name = MASTER_NAME
      end

      master.vm.provision "shell", inline: <<-SHELL
         # --------- set up cluster ---------
         # use Calico network plugin -> pod network cidr = 192.168.0.0/16
         kubeadm init --apiserver-advertise-address=#{ipv4} --pod-network-cidr=192.168.0.0/16
         
         # set up k8s configuration
         mkdir -p $HOME/.kube
         sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
         sudo chown $(id -u):$(id -g) $HOME/.kube/config
         
         # set up Calico network plugin
         kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml

         # get join token for worker nodes
         kubeadm token create --print-join-command > /root/shared/join-command.txt

         # --------- fix network interface - error: add node have same Internal IP ---------
         echo 'Environment="KUBELET_EXTRA_ARGS=--node-ip=#{ipv4}"' >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
         systemctl daemon-reload
         systemctl restart kubelet
      SHELL
   end


   # ------------------------------------------------------
   # ----------------------- Worker VM --------------------
   # ------------------------------------------------------
   (1..WORKER_NUM).each do |i|
      vm_name = "#{WORKER_NAME_PREFIX}#{i}"
      ipv4=IP_BASE + "#{10 + i}"

      config.vm.define vm_name do |worker|
         worker.vm.network "private_network", ip: "#{ipv4}"
         worker.vm.hostname = vm_name
         worker.vm.provider "virtualbox" do |vbox|
            vbox.name = vm_name
         end

			worker.vm.provision "shell", inline: <<-SHELL
            # --------- join cluster ---------
				# read the join token and execute it
				$(cat /root/shared/join-command.txt)

            # --------- fix network interface - error: add node have same Internal IP ---------
            echo 'Environment="KUBELET_EXTRA_ARGS=--node-ip=#{ipv4}"' >> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
            systemctl daemon-reload
            systemctl restart kubelet
			SHELL
      end   
   end
end
